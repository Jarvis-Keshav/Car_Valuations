{"ast":null,"code":"'use strict';\n\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar copy = require('../copy').copy;\nvar remove = require('../remove').remove;\nvar mkdirp = require('../mkdirs').mkdirp;\nvar pathExists = require('../path-exists').pathExists;\nvar stat = require('../util/stat');\nfunction move(src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var overwrite = opts.overwrite || opts.clobber || false;\n  stat.checkPaths(src, dest, 'move', opts, function (err, stats) {\n    if (err) return cb(err);\n    var srcStat = stats.srcStat,\n      _stats$isChangingCase = stats.isChangingCase,\n      isChangingCase = _stats$isChangingCase === void 0 ? false : _stats$isChangingCase;\n    stat.checkParentPaths(src, srcStat, dest, 'move', function (err) {\n      if (err) return cb(err);\n      if (isParentRoot(dest)) return doRename(src, dest, overwrite, isChangingCase, cb);\n      mkdirp(path.dirname(dest), function (err) {\n        if (err) return cb(err);\n        return doRename(src, dest, overwrite, isChangingCase, cb);\n      });\n    });\n  });\n}\nfunction isParentRoot(dest) {\n  var parent = path.dirname(dest);\n  var parsedPath = path.parse(parent);\n  return parsedPath.root === parent;\n}\nfunction doRename(src, dest, overwrite, isChangingCase, cb) {\n  if (isChangingCase) return rename(src, dest, overwrite, cb);\n  if (overwrite) {\n    return remove(dest, function (err) {\n      if (err) return cb(err);\n      return rename(src, dest, overwrite, cb);\n    });\n  }\n  pathExists(dest, function (err, destExists) {\n    if (err) return cb(err);\n    if (destExists) return cb(new Error('dest already exists.'));\n    return rename(src, dest, overwrite, cb);\n  });\n}\nfunction rename(src, dest, overwrite, cb) {\n  fs.rename(src, dest, function (err) {\n    if (!err) return cb();\n    if (err.code !== 'EXDEV') return cb(err);\n    return moveAcrossDevice(src, dest, overwrite, cb);\n  });\n}\nfunction moveAcrossDevice(src, dest, overwrite, cb) {\n  var opts = {\n    overwrite: overwrite,\n    errorOnExist: true\n  };\n  copy(src, dest, opts, function (err) {\n    if (err) return cb(err);\n    return remove(src, cb);\n  });\n}\nmodule.exports = move;","map":null,"metadata":{},"sourceType":"script"}
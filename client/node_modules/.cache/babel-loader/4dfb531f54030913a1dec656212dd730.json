{"ast":null,"code":"'use strict';\n\nvar u = require('universalify').fromCallback;\nvar path = require('path');\nvar fs = require('graceful-fs');\nvar mkdir = require('../mkdirs');\nfunction createFile(file, callback) {\n  function makeFile() {\n    fs.writeFile(file, '', function (err) {\n      if (err) return callback(err);\n      callback();\n    });\n  }\n  fs.stat(file, function (err, stats) {\n    // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback();\n    var dir = path.dirname(file);\n    fs.stat(dir, function (err, stats) {\n      if (err) {\n        // if the directory doesn't exist, make it\n        if (err.code === 'ENOENT') {\n          return mkdir.mkdirs(dir, function (err) {\n            if (err) return callback(err);\n            makeFile();\n          });\n        }\n        return callback(err);\n      }\n      if (stats.isDirectory()) makeFile();else {\n        // parent is not a directory\n        // This is just to cause an internal ENOTDIR error to be thrown\n        fs.readdir(dir, function (err) {\n          if (err) return callback(err);\n        });\n      }\n    });\n  });\n}\nfunction createFileSync(file) {\n  var stats;\n  try {\n    stats = fs.statSync(file);\n  } catch (_unused) {}\n  if (stats && stats.isFile()) return;\n  var dir = path.dirname(file);\n  try {\n    if (!fs.statSync(dir).isDirectory()) {\n      // parent is not a directory\n      // This is just to cause an internal ENOTDIR error to be thrown\n      fs.readdirSync(dir);\n    }\n  } catch (err) {\n    // If the stat call above failed because the directory doesn't exist, create it\n    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir);else throw err;\n  }\n  fs.writeFileSync(file, '');\n}\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync: createFileSync\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar u = require('universalify').fromCallback;\nvar path = require('path');\nvar fs = require('graceful-fs');\nvar mkdir = require('../mkdirs');\nvar pathExists = require('../path-exists').pathExists;\nvar _require = require('../util/stat'),\n  areIdentical = _require.areIdentical;\nfunction createLink(srcpath, dstpath, callback) {\n  function makeLink(srcpath, dstpath) {\n    fs.link(srcpath, dstpath, function (err) {\n      if (err) return callback(err);\n      callback(null);\n    });\n  }\n  fs.lstat(dstpath, function (_, dstStat) {\n    fs.lstat(srcpath, function (err, srcStat) {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink');\n        return callback(err);\n      }\n      if (dstStat && areIdentical(srcStat, dstStat)) return callback(null);\n      var dir = path.dirname(dstpath);\n      pathExists(dir, function (err, dirExists) {\n        if (err) return callback(err);\n        if (dirExists) return makeLink(srcpath, dstpath);\n        mkdir.mkdirs(dir, function (err) {\n          if (err) return callback(err);\n          makeLink(srcpath, dstpath);\n        });\n      });\n    });\n  });\n}\nfunction createLinkSync(srcpath, dstpath) {\n  var dstStat;\n  try {\n    dstStat = fs.lstatSync(dstpath);\n  } catch (_unused) {}\n  try {\n    var srcStat = fs.lstatSync(srcpath);\n    if (dstStat && areIdentical(srcStat, dstStat)) return;\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink');\n    throw err;\n  }\n  var dir = path.dirname(dstpath);\n  var dirExists = fs.existsSync(dir);\n  if (dirExists) return fs.linkSync(srcpath, dstpath);\n  mkdir.mkdirsSync(dir);\n  return fs.linkSync(srcpath, dstpath);\n}\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync: createLinkSync\n};","map":null,"metadata":{},"sourceType":"script"}